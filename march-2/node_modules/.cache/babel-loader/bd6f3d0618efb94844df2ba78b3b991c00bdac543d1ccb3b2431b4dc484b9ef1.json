{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\technomix\\\\Desktop\\\\myaction\\\\DI\\\\works\\\\Digital-Institute-s-lessons\\\\tengo minasovi lesson 29\\\\march-2\\\\src\\\\AppShowInstruciton.jsx\";\nimport { Component } from \"react\";\nimport { fetchPosts } from \"./api/posts\";\nimport { PostContainer } from \"./components/PostContainer\";\n\n// 1.დაფეტჩეთ https://jsonplaceholder.typicode.com/posts \n// 2.გამოიტანეთ ყველა პოსტის title,body + <button> see comments\n// 3. button ზე დაკლიკებისას სადმე დომში გამოიტანეთ ამ პოსტის კომენტარები\n// https://jsonplaceholder.typicode.com/posts/1/comments        ეეს ლინკი წამოიღებს იმ პოსტის კომენტარებს რომლის id არის 1 . როცა პოსტს დავაკლიკებ მოთხოვნა უნდა გაიგზავნოს შესაბამისი პოსტის იდ -ით მაგ ლინკზე და გამოიტანოთ მომხმარებლისთვის\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AppShowInstruction extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      isLoading: true\n    };\n    this.hendleClick = this.hendleClick.bind(this);\n  }\n  componentDidMount() {\n    var _this$state$posts;\n    fetchPosts().then(posts => {\n      this.setState({\n        posts: posts\n      });\n    });\n    (_this$state$posts = this.state.posts) === null || _this$state$posts === void 0 ? void 0 : _this$state$posts.map(post => console.log(post));\n  }\n  hendleClick(id) {\n    console.log(id);\n  }\n  render() {\n    const {\n      posts\n    } = this.state;\n    if (posts.isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u10D8\\u10E2\\u10D5\\u10D8\\u10E0\\u10D7\\u10D4\\u10D1\\u10D0...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    }\n    return posts.map(post => /*#__PURE__*/_jsxDEV(PostContainer, {\n      post: post,\n      onClick: this.hendleClick\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this));\n  }\n}\nexport default AppShowInstruction;","map":{"version":3,"names":["Component","fetchPosts","PostContainer","jsxDEV","_jsxDEV","AppShowInstruction","constructor","props","state","posts","isLoading","hendleClick","bind","componentDidMount","_this$state$posts","then","setState","map","post","console","log","id","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/technomix/Desktop/myaction/DI/works/Digital-Institute-s-lessons/tengo minasovi lesson 29/march-2/src/AppShowInstruciton.jsx"],"sourcesContent":["import { Component } from \"react\";\r\nimport { fetchPosts } from \"./api/posts\";\r\nimport { PostContainer } from \"./components/PostContainer\";\r\n\r\n// 1.დაფეტჩეთ https://jsonplaceholder.typicode.com/posts \r\n// 2.გამოიტანეთ ყველა პოსტის title,body + <button> see comments\r\n// 3. button ზე დაკლიკებისას სადმე დომში გამოიტანეთ ამ პოსტის კომენტარები\r\n// https://jsonplaceholder.typicode.com/posts/1/comments        ეეს ლინკი წამოიღებს იმ პოსტის კომენტარებს რომლის id არის 1 . როცა პოსტს დავაკლიკებ მოთხოვნა უნდა გაიგზავნოს შესაბამისი პოსტის იდ -ით მაგ ლინკზე და გამოიტანოთ მომხმარებლისთვის\r\n\r\n\r\nclass AppShowInstruction extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tposts: [],\r\n\t\t\tisLoading: true,\r\n\t\t\t\r\n\t\t}\r\n\t\tthis.hendleClick = this.hendleClick.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tfetchPosts().then(posts => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tposts: posts\r\n\r\n\t\t\t})\r\n\r\n\t\t})\r\n\t\tthis.state.posts?.map(post => console.log(post))\r\n\r\n\t}\r\n\thendleClick(id) {\r\n\t\tconsole.log(id);\r\n\t}\r\n\trender() {\r\n\t\tconst { posts } = this.state;\r\n\t\tif (posts.isLoading) {\r\n\t\t\treturn <h1>იტვირთება...</h1>;\r\n\t\t}\r\n\t\t\r\n\r\n\t\treturn (\r\n\t\t\tposts.map(post =>\r\n\t\t\t\t<PostContainer key={post.id} post={post} onClick={this.hendleClick} />\r\n\t\t\t\t )\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default AppShowInstruction;\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,aAAa,QAAQ,4BAA4B;;AAE1D;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,kBAAkB,SAASL,SAAS,CAAC;EAC1CM,WAAWA,CAACC,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACZC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;IAEZ,CAAC;IACD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC/C;EACAC,iBAAiBA,CAAA,EAAG;IAAA,IAAAC,iBAAA;IACnBb,UAAU,CAAC,CAAC,CAACc,IAAI,CAACN,KAAK,IAAI;MAC1B,IAAI,CAACO,QAAQ,CAAC;QACbP,KAAK,EAAEA;MAER,CAAC,CAAC;IAEH,CAAC,CAAC;IACF,CAAAK,iBAAA,OAAI,CAACN,KAAK,CAACC,KAAK,cAAAK,iBAAA,uBAAhBA,iBAAA,CAAkBG,GAAG,CAACC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;EAEjD;EACAP,WAAWA,CAACU,EAAE,EAAE;IACfF,OAAO,CAACC,GAAG,CAACC,EAAE,CAAC;EAChB;EACAC,MAAMA,CAAA,EAAG;IACR,MAAM;MAAEb;IAAM,CAAC,GAAG,IAAI,CAACD,KAAK;IAC5B,IAAIC,KAAK,CAACC,SAAS,EAAE;MACpB,oBAAON,OAAA;QAAAmB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAC7B;IAGA,OACClB,KAAK,CAACQ,GAAG,CAACC,IAAI,iBACbd,OAAA,CAACF,aAAa;MAAegB,IAAI,EAAEA,IAAK;MAACU,OAAO,EAAE,IAAI,CAACjB;IAAY,GAA/CO,IAAI,CAACG,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0C,CACpE,CAAC;EAEL;AACD;AAIA,eAAetB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}